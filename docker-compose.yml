version: '3.4'

#x-cache-from:
#  - &api-cache-from
#    cache_from:
#      - ${NGINX_IMAGE:-quay.io/api-platform/nginx}
#      - ${PHP_IMAGE:-quay.io/api-platform/php}

services:
#  php:
#    container_name: php
#    restart: always
#    build:
#      context: ./api
#      target: api_platform_php
##      <<: *api-cache-from
##    image: ${PHP_IMAGE:-quay.io/api-platform/php}
#    healthcheck:
#      interval: 10s
#      timeout: 3s
#      retries: 3
#      start_period: 30s
#    depends_on:
#      - db
#      - dev-tls
#    volumes:
#      - ./api:/srv/api:rw,cached
#      - ./api/docker/php/conf.d/api-platform.dev.ini:/usr/local/etc/php/conf.d/api-platform.ini
#      # if you develop on Linux, you may use a bind-mounted host directory instead
#      # - ./api/var:/srv/api/var:rw
#      - dev-certs:/certs:ro,nocopy
#
#  api:
#    container_name: api
#    build:
#      context: ./api
#      target: api_platform_nginx
##      <<: *api-cache-from
##    image: ${NGINX_IMAGE:-quay.io/api-platform/nginx}
#    depends_on:
#      - php
#    volumes:
#      - ./api/public:/srv/api/public:ro

#  vulcain:
#    container_name: vulcain
#    image: dunglas/vulcain
#    environment:
#      - CERT_FILE=/certs/localhost.crt
#      - KEY_FILE=/certs/localhost.key
#      - UPSTREAM=http://api
#    depends_on:
#      - api
#      - dev-tls
#    volumes:
#      - dev-certs:/certs:ro,nocopy
#    ports:
#      - target: 443
#        published: 8443
#        protocol: tcp

#  db:
#    container_name: postgresql
#    restart: always
#    image: postgres:12-alpine
#    environment:
#      - POSTGRES_DB=api
#      - POSTGRES_PASSWORD=!ChangeMe!
#      - POSTGRES_USER=api-platform
#    volumes:
##      - db-data:/var/lib/postgresql/data:rw
#      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      - ./api/docker/db/data:/var/lib/postgresql/data:rw
#    ports:
#      - target: 5432
#        published: 5432
#        protocol: tcp

#  mercure:
#    container_name: mercure
#    image: dunglas/mercure
#    environment:
#      - ALLOW_ANONYMOUS=1
#      - CERT_FILE=/certs/localhost.crt
#      - CORS_ALLOWED_ORIGINS=*
#      - DEMO=1
#      - JWT_KEY=!ChangeMe!
#      - KEY_FILE=/certs/localhost.key
#      - PUBLISH_ALLOWED_ORIGINS=https://localhost:1337 # required for publishing from the demo page
#    depends_on:
#      - dev-tls
#    volumes:
#      - dev-certs:/certs:ro,nocopy
#    ports:
#      - target: 443
#        published: 1337
#        protocol: tcp

#  client:
#    container_name: client_dev
#    build:
#      context: ./client
#      target: api_platform_client_development
##      cache_from:
##        - ${CLIENT_IMAGE:-quay.io/api-platform/client}
##    image: ${CLIENT_IMAGE:-quay.io/api-platform/client}
#    tty: true # https://github.com/facebook/create-react-app/issues/8688
#    environment:
#      - API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT=http://api
#      - API_PLATFORM_CLIENT_GENERATOR_OUTPUT=src
#    depends_on:
#      - dev-tls
#    volumes:
#      - ./client:/usr/src/client:rw,cached
#      - dev-certs:/usr/src/client/node_modules/webpack-dev-server/ssl:rw,nocopy
#    ports:
#      - target: 3000
#        published: 443
#        protocol: tcp

#  app:
#    container_name: app
#    build:
#      context: ./app
#      args:
#        - NODE_VERSION=13
#        - NGINX_VERSION=1.17
#      target: api_platform_app_development
#    #      Only for swarm mode
#    #      cache_from:
#    #        - ${ADMIN_IMAGE:-quay.io/api-platform/admin}
#    #    image: ${ADMIN_IMAGE:-quay.io/api-platform/admin}
#    tty: true # https://github.com/facebook/create-react-app/issues/8688
#    depends_on:
#      - dev-tls
#    volumes:
#      - ./app:/usr/src/app:rw,cached
#      - dev-certs:/usr/src/app/node_modules/webpack-dev-server/ssl:rw,nocopy
#    ports:
#      - target: 4200
#        published: 447
#        protocol: tcp

#  dev-tls:
#    container_name: START
#    build:
#      context: ./docker/dev-tls
#    volumes:
#      - dev-certs:/certs:rw
#    ports:
#      - target: 80
#        published: 80
#        protocol: tcp

  app:
    build:
      context: ./app
      target: api_platform_app_nginx
    expose:
      - 80
    environment:
      - "VIRTUAL_HOST=test.domain.com"

  client:
    build:
      context: ./client
      target: api_platform_client_nginx
    expose:
      - 80
    environment:
      - "VIRTUAL_HOST=blog.domain.com"
        
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    restart: always
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
    volumes:
#      - ./docker/nginx-proxy/certs:/etc/nginx/certs:ro
      - ./docker/nginx-proxy/vhost.d:/etc/nginx/vhost.d:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

volumes:
  db-data: {}
  dev-certs: {}
