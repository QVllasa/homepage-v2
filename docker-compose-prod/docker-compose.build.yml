version: '3.4'

x-cache-from:
  - &api-cache-from
    cache_from:
      - ${NGINX_IMAGE:?NGINX_IMAGE is not set or empty}
      - ${PHP_IMAGE:?PHP_IMAGE is not set or empty}
      - ${VARNISH_IMAGE:?VARNISH_IMAGE is not set or empty}

services:
  php:
    build:
      context: ../api
      target: api_platform_php
      <<: *api-cache-from
    image: ${PHP_IMAGE:?PHP_IMAGE is not set or empty}
    volumes:
      - media-volume:/srv/api/public/media:rw

  admin:
    build:
      context: ../api
      target: api_platform_nginx
      <<: *api-cache-from
    image: ${NGINX_IMAGE:?NGINX_IMAGE is not set or empty}
    depends_on:
      - php
    volumes:
      - media-volume:/srv/api/public/media:rw

  cache-proxy:
    build:
      context: ../api
      target: api_platform_varnish
      <<: *api-cache-from
    image: ${VARNISH_IMAGE:?VARNISH_IMAGE is not set or empty}
    depends_on:
      - admin

  app:
    # in production, we may want to use a static website hosting service
    # https://facebook.github.io/create-react-app/docs/deployment
    build:
      context: ../app
      target: api_platform_app_nginx
      cache_from:
        - ${APP_IMAGE:?ADMIN_IMAGE is not set or empty}
    image: ${APP_IMAGE:?ADMIN_IMAGE is not set or empty}
    expose:
      - 80
        
        
  nginx-proxy:
    build:
      context: ./docker/nginx-proxy
      <<: *api-cache-from
    image: ${NGINX_PROXY_IMAGE:?NGINX_PROXY_IMAGE is not set or empty}
    restart: always
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
    volumes:
      - ./docker/nginx-proxy/vhost.d:/etc/nginx/vhost.d:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

volumes:
  media-volume: {}
